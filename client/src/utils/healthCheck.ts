import { apiService } from '../services/api';
import { validateEnvironment } from '../config/api';

export const performHealthCheck = async (): Promise<boolean> => {
  console.log('üîç Performing health check...');
  
  if (!validateEnvironment()) {
    return false;
  }

  try {
    const response = await apiService.checkHealth();
    console.log('‚úÖ Health check passed:', response);
    return true;
  } catch (error) {
    console.error('‚ùå Health check failed:', error);
    return false;
  }
};

export const showHealthStatus = async (): Promise<void> => {
  const isHealthy = await performHealthCheck();
  
  if (isHealthy) {
    alert('‚úÖ ÏÑúÎ≤Ñ Ïó∞Í≤∞ ÏÉÅÌÉúÍ∞Ä ÏñëÌò∏Ìï©ÎãàÎã§!');
  } else {
    alert('‚ùå ÏÑúÎ≤Ñ Ïó∞Í≤∞Ïóê Î¨∏Ï†úÍ∞Ä ÏûàÏäµÎãàÎã§. ÏΩòÏÜîÏùÑ ÌôïÏù∏Ìï¥Ï£ºÏÑ∏Ïöî.');
  }
};

// Í∞úÎ∞ú ÎèÑÍµ¨Ïö© Ï†ÑÏó≠ Ìï®Ïàò
declare global {
  interface Window {
    checkHealth?: () => Promise<void>;
    validateEnv?: () => boolean;
  }
}

if (typeof window !== 'undefined') {
  window.checkHealth = showHealthStatus;
  window.validateEnv = validateEnvironment;
}